{"ast":null,"code":"export default {\n  name: \"ServiceBook\",\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      form: {\n        title: '',\n        time: '',\n        content: ''\n      },\n      services: [],\n      // 存储已申请的服务\n      serviceOptions: [{\n        label: '房间清洁',\n        value: 'cleaning'\n      }, {\n        label: '早餐服务',\n        value: 'breakfast'\n      }, {\n        label: '接送服务',\n        value: 'transportation'\n      }],\n      rules: {\n        title: [{\n          required: true,\n          message: '请选择服务类型',\n          trigger: 'change'\n        }],\n        time: [{\n          required: true,\n          message: '请选择预约时间',\n          trigger: 'change'\n        }]\n      }\n    };\n  },\n  mounted() {\n    this.loadServices();\n  },\n  computed: {\n    filteredServices() {\n      // 对服务进行处理，只返回需要展示的字段\n      return this.services.map(service => ({\n        title: service.title,\n        formattedTime: new Date(service.time).toLocaleString(),\n        // 格式化时间\n        content: service.content\n      }));\n    },\n    isFormDisabled() {\n      return this.services.length >= 5; // 假设限制最多申请5个服务\n    }\n  },\n  methods: {\n    loadServices() {\n      this.$request.get('/serviceBook/selectByUser/' + this.user.id).then(res => {\n        this.services = res.data || [];\n      });\n    }\n    // 其他方法保持不变\n  }\n};","map":{"version":3,"names":["name","data","user","JSON","parse","localStorage","getItem","form","title","time","content","services","serviceOptions","label","value","rules","required","message","trigger","mounted","loadServices","computed","filteredServices","map","service","formattedTime","Date","toLocaleString","isFormDisabled","length","methods","$request","get","id","then","res"],"sources":["src/views/front/ServiceBooking.vue"],"sourcesContent":["<template>\n  <div class=\"main-content\" style=\"width: 50%\">\n    <div class=\"card\" style=\"font-weight: bold;font-size: 28px;display: flex\">\n      酒店服务申请\n    </div>\n    <div class=\"card\" style=\"margin-top: 10px\">\n      <div style=\"font-size: 28px;display: flex\">\n      已申请服务\n      </div>\n      <el-table :data=\"filteredServices\" style=\"width: 100%\">\n        <el-table-column prop=\"title\" label=\"服务类型\"></el-table-column>\n        <el-table-column prop=\"time\" label=\"预约时间\"></el-table-column>\n        <el-table-column prop=\"content\" label=\"备注\"></el-table-column>\n      </el-table>\n\n      <div style=\"font-size: 28px;display: flex\">\n      申请服务\n      </div>\n      <el-form :model=\"form\" ref=\"formRef\" label-width=\"200px\" label-align=\"right\" :rules=\"rules\" style=\"margin-top: 20px\">\n        <el-form-item label=\"预约服务类型\" prop=\"title\" required>\n          <el-select v-model=\"form.title\" placeholder=\"选择服务类型\">\n            <el-option\n              v-for=\"option in serviceOptions\"\n              :key=\"option.value\"\n              :label=\"option.label\"\n              :value=\"option.value\"\n            ></el-option>\n          </el-select>\n        </el-form-item>\n\n        <el-form-item label=\"预约服务时间\" prop=\"time\" required>\n          <el-date-picker v-model=\"form.time\" type=\"datetime\" placeholder=\"选择预约时间\"></el-date-picker>\n        </el-form-item>\n        <el-form-item label=\"备注\" prop=\"content\">\n          <el-input type=\"textarea\" v-model=\"form.content\" placeholder=\"请输入备注\"></el-input>\n        </el-form-item>\n        <div style=\"margin-bottom: 20px;margin-left: 200px;\">\n          <el-button style=\"background-color: #006eff\" :disabled=\"isFormDisabled\" class=\"my-button-primary\"\n                     type=\"primary\" @click=\"submitRequest\">\n            提交申请\n          </el-button>\n        </div>\n      </el-form>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"ServiceBook\",\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      form: {\n        title: '',\n        time: '',\n        content: ''\n      },\n      services: [], // 存储已申请的服务\n      serviceOptions: [\n        { label: '房间清洁', value: 'cleaning' },\n        { label: '早餐服务', value: 'breakfast' },\n        { label: '接送服务', value: 'transportation' },\n      ],\n      rules: {\n        title: [{ required: true, message: '请选择服务类型', trigger: 'change' }],\n        time: [{ required: true, message: '请选择预约时间', trigger: 'change' }],\n      }\n    }\n  },\n  mounted() {\n    this.loadServices();\n  },\n  computed: {\n    filteredServices() {\n      // 对服务进行处理，只返回需要展示的字段\n      return this.services.map(service => ({\n        title: service.title,\n        formattedTime: new Date(service.time).toLocaleString(), // 格式化时间\n        content: service.content\n      }));\n    },\n    isFormDisabled() {\n      return this.services.length >= 5; // 假设限制最多申请5个服务\n    },\n  },\n  methods: {\n    loadServices() {\n      this.$request.get('/serviceBook/selectByUser/' + this.user.id).then(res => {\n        this.services = res.data || [];\n      });\n    },\n    // 其他方法保持不变\n  }\n}\n</script>\n\n<style scoped>\n.my-button-primary {\n  background-color: #006eff !important;\n  height: 70px; /* px单位 */\n  line-height: 70px;\n  font-size: 28px; /* px单位 */\n}\n</style>"],"mappings":"AAgDA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACAC,IAAA;QACAC,KAAA;QACAC,IAAA;QACAC,OAAA;MACA;MACAC,QAAA;MAAA;MACAC,cAAA,GACA;QAAAC,KAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,KAAA;MAAA,EACA;MACAC,KAAA;QACAP,KAAA;UAAAQ,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;QACAT,IAAA;UAAAO,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MACA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,YAAA;EACA;EACAC,QAAA;IACAC,iBAAA;MACA;MACA,YAAAX,QAAA,CAAAY,GAAA,CAAAC,OAAA;QACAhB,KAAA,EAAAgB,OAAA,CAAAhB,KAAA;QACAiB,aAAA,MAAAC,IAAA,CAAAF,OAAA,CAAAf,IAAA,EAAAkB,cAAA;QAAA;QACAjB,OAAA,EAAAc,OAAA,CAAAd;MACA;IACA;IACAkB,eAAA;MACA,YAAAjB,QAAA,CAAAkB,MAAA;IACA;EACA;EACAC,OAAA;IACAV,aAAA;MACA,KAAAW,QAAA,CAAAC,GAAA,qCAAA9B,IAAA,CAAA+B,EAAA,EAAAC,IAAA,CAAAC,GAAA;QACA,KAAAxB,QAAA,GAAAwB,GAAA,CAAAlC,IAAA;MACA;IACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}