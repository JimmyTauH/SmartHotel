{"ast":null,"code":"import Footer from \"@/components/Footer.vue\";\nexport default {\n  name: \"ActivityList\",\n  data() {\n    return {\n      tableData: [],\n      // 所有的数据\n      pageNum: 1,\n      // 当前的页码\n      pageSize: 4,\n      // 每页显示的个数\n      total: 0,\n      name: null\n    };\n  },\n  props: {\n    type: null,\n    span: null\n  },\n  mounted() {\n    this.load(1);\n  },\n  // methods：本页面所有的点击事件或者其他函数定义区\n  methods: {\n    goDetail(id) {\n      window.open('/front/ActivityDetail?activityId=' + id);\n    },\n    load(pageNum) {\n      // 分页查询\n      let url;\n      switch (this.type) {\n        case 'user':\n          url = '/activity/selectUser';\n          break;\n        case 'like':\n          url = '/activity/selectLike';\n          break;\n        case 'collect':\n          url = '/activity/selectCollect';\n          break;\n        case 'comment':\n          url = '/activity/selectComment';\n          break;\n        default:\n          url = '/activity/selectPage';\n      }\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get(url, {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          name: this.name,\n          host: this.host\n        }\n      }).then(res => {\n        this.tableData = res.data?.list;\n        this.total = res.data?.total;\n        this.startCountdown();\n      });\n    },\n    reset() {\n      this.name = null;\n      this.host = null;\n      this.load(1);\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum);\n    },\n    startCountdown() {\n      this.updateCountdown();\n      setInterval(this.updateCountdown, 1000);\n    },\n    updateCountdown() {\n      if (this.tableData == null || this.tableData.length === 0) {\n        return;\n      }\n      const now = new Date();\n      this.tableData.forEach(item => {\n        const applyStartTime = new Date(item.applystart);\n        if (applyStartTime > now) {\n          this.$set(item, 'isApplyStart', false);\n        } else {\n          this.$set(item, 'isApplyStart', true);\n        }\n        const applyEndTime = new Date(item.applyend);\n        if (applyEndTime >= now) {\n          const applyRemainingTime = this.calculateRemainingTime(now, applyEndTime);\n          this.$set(item, 'applyRemainingDays', applyRemainingTime.days);\n          this.$set(item, 'applyRemainingHours', applyRemainingTime.hours);\n          this.$set(item, 'isApplyEnd', false);\n        } else {\n          this.$set(item, 'applyRemainingDays', 0);\n          this.$set(item, 'applyRemainingHours', 0);\n          this.$set(item, 'isApplyEnd', true);\n        }\n        const startTime = new Date(item.start);\n        if (startTime > now) {\n          const remainingTime = this.calculateRemainingTime(now, startTime);\n          this.$set(item, 'remainingDays', remainingTime.days);\n          this.$set(item, 'remainingHours', remainingTime.hours);\n          this.$set(item, 'isStartActivity', false);\n        } else {\n          this.$set(item, 'remainingDays', 0);\n          this.$set(item, 'remainingHours', 0);\n          this.$set(item, 'isStartActivity', true);\n        }\n        const endTime = new Date(item.end);\n        if (endTime >= now) {\n          this.$set(item, 'isEndActivity', false);\n        } else {\n          this.$set(item, 'isEndActivity', true);\n        }\n      });\n    },\n    calculateRemainingTime(startTime, endTime) {\n      const diff = endTime - startTime;\n      const days = Math.floor(diff / (1000 * 60 * 60 * 24));\n      const hours = Math.floor(diff % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n      return {\n        days,\n        hours\n      };\n    }\n  }\n};","map":{"version":3,"names":["Footer","name","data","tableData","pageNum","pageSize","total","props","type","span","mounted","load","methods","goDetail","id","window","open","url","$request","get","params","host","then","res","list","startCountdown","reset","handleCurrentChange","updateCountdown","setInterval","length","now","Date","forEach","item","applyStartTime","applystart","$set","applyEndTime","applyend","applyRemainingTime","calculateRemainingTime","days","hours","startTime","start","remainingTime","endTime","end","diff","Math","floor"],"sources":["src/components/ActivityList.vue"],"sourcesContent":["<template>\n  <div>\n    <el-row :gutter=\"10\" v-if=\"total\">\n      <el-col :span=\"12\" v-for=\"item in tableData\" :key=\"item.id\">\n        <div class=\"card\" style=\"margin-bottom: 10px; cursor: pointer\" @click=\"goDetail(item.id)\">\n          <img :src=\"item.cover\" style=\"width: 100%; height: 250px;border-radius: 5px\" alt=\"\">\n          <div style=\"margin: 10px 0; font-weight: bold;width: 100%; height: 35px;font-size:15px;\">{{ item.name }}</div>\n          <div style=\"display: flex; align-items: center; justify-content: space-between;\">\n            \n            <div><i class=\"el-icon-time\" style=\"margin-right: 5px\"></i>报名时间：{{ item.applystart }} - {{ item.applyend }}</div>\n            <div v-if=\"!item.isApplyStart\" style=\"color: gray; font-weight: bold;\">\n              报名未开始\n            </div>\n            <div v-else-if=\"!item.isApplyEnd\" class=\"countdown\">\n              <div class=\"countdown-block1\">\n                <div class=\"countdown-value1\">{{ item.applyRemainingDays }}天 | {{ item.applyRemainingHours }}小时</div>\n              </div>\n            </div>\n            <div v-else style=\"color: gray; font-weight: bold;\">\n              报名已结束\n            </div>\n          </div>\n          <div style=\"display: flex; align-items: center; justify-content: space-between;\">\n            <div><i class=\"el-icon-time\" style=\"margin-right: 5px;margin-top: 10px;\"></i>比赛时间：{{ item.start }} - {{ item.end }}</div>\n            <div v-if=\"!item.isStartActivity\" class=\"countdown\">\n              <div class=\"countdown-block1\">\n                <div class=\"countdown-value1\">{{ item.remainingDays }}天 | {{ item.remainingHours }}小时</div>\n              </div>\n            </div>\n            <div v-else-if=\"!item.isEndActivity\" style=\"color: gray; font-weight: bold;\">\n              比赛进行中\n            </div>\n            <div v-else style=\"color: gray; font-weight: bold;\">\n              已结束\n            </div>\n          </div>\n          <div style=\"text-align: right; margin-top: 10px;\">\n<!--            <el-button type=\"primary\" disabled v-if=\"item.isApplyEnd\" key=\"报名已结束\">报名已结束</el-button>-->\n<!--            <el-button type=\"primary\" disabled v-else-if=\"item.isSign\" key=\"已报名\">已报名</el-button>-->\n<!--            <el-button type=\"primary\" v-else key=\"查看详情\" >查看详情</el-button>-->\n            <el-button type=\"primary\" key=\"查看详情\" >查看详情</el-button>\n          </div>\n        </div>\n      </el-col>\n    </el-row>\n    <div class=\"card\" v-if=\"total === 0\" style=\"text-align: center; font-size: 16px; color: #666\">暂无数据</div>\n    <div class=\"card\" style=\"padding: 10px\" v-if=\"total\">\n      <el-pagination\n          background\n          @current-change=\"handleCurrentChange\"\n          :current-page=\"pageNum\"\n          :page-sizes=\"[4, 8, 12]\"\n          :page-size=\"pageSize\"\n          layout=\"total, prev, pager, next\"\n          :total=\"total\">\n      </el-pagination>\n\n      <Footer></Footer>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Footer from \"@/components/Footer.vue\";\n\nexport default {\n  name: \"ActivityList\",\n  data() {\n    return {\n      tableData: [],  // 所有的数据\n      pageNum: 1,   // 当前的页码\n      pageSize: 4,  // 每页显示的个数\n      total: 0,\n      name: null,\n    }\n  },\n  props:{\n    type: null,\n    span:null\n  },\n  mounted() {\n    this.load(1)\n  },\n  // methods：本页面所有的点击事件或者其他函数定义区\n  methods: {\n    goDetail(id) {\n      window.open('/front/ActivityDetail?activityId=' + id)\n    },\n    load(pageNum) {  // 分页查询\n      let url\n      switch (this.type) {\n        case 'user':\n          url = '/activity/selectUser';\n          break;\n        case 'like':\n          url = '/activity/selectLike';\n          break;\n        case 'collect':\n          url = '/activity/selectCollect';\n          break;\n        case 'comment':\n          url = '/activity/selectComment';\n          break;\n        default:\n          url = '/activity/selectPage';\n      }\n      if (pageNum) this.pageNum = pageNum\n      this.$request.get(url, {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          name: this.name,\n          host: this.host\n        }\n      }).then(res => {\n        this.tableData = res.data?.list\n        this.total = res.data?.total\n        this.startCountdown()\n      })\n    },\n    reset() {\n      this.name = null\n      this.host = null\n      this.load(1)\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum)\n    },\n    startCountdown() {\n      this.updateCountdown()\n      setInterval(this.updateCountdown, 1000);\n    },\n    updateCountdown() {\n      if (this.tableData == null || this.tableData.length === 0) {\n        return;\n      }\n      const now = new Date();\n      this.tableData.forEach(item => {\n        const applyStartTime = new Date(item.applystart);\n        if (applyStartTime > now) {\n          this.$set(item, 'isApplyStart', false);\n        } else {\n          this.$set(item, 'isApplyStart', true);\n        }\n\n        const applyEndTime = new Date(item.applyend);\n        if (applyEndTime >= now) {\n          const applyRemainingTime = this.calculateRemainingTime(now, applyEndTime);\n          this.$set(item, 'applyRemainingDays', applyRemainingTime.days);\n          this.$set(item, 'applyRemainingHours', applyRemainingTime.hours);\n          this.$set(item, 'isApplyEnd', false);\n        } else {\n          this.$set(item, 'applyRemainingDays', 0);\n          this.$set(item, 'applyRemainingHours', 0);\n          this.$set(item, 'isApplyEnd', true);\n        }\n\n        const startTime = new Date(item.start);\n        if (startTime > now) {\n          const remainingTime = this.calculateRemainingTime(now, startTime);\n          this.$set(item, 'remainingDays', remainingTime.days);\n          this.$set(item, 'remainingHours', remainingTime.hours);\n          this.$set(item, 'isStartActivity', false);\n        } else {\n          this.$set(item, 'remainingDays', 0);\n          this.$set(item, 'remainingHours', 0);\n          this.$set(item, 'isStartActivity', true);\n        }\n\n        const endTime = new Date(item.end);\n        if (endTime >= now) {\n          this.$set(item, 'isEndActivity', false);\n        } else {\n          this.$set(item, 'isEndActivity', true);\n        }\n      });\n    },\n    calculateRemainingTime(startTime, endTime) {\n      const diff = endTime - startTime;\n      const days = Math.floor(diff / (1000 * 60 * 60 * 24));\n      const hours = Math.floor((diff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n      return { days, hours };\n    }\n  }\n}\n</script>\n\n<style>\n.countdown {\n  display: flex;\n  gap: 10px;\n}\n\n.countdown-block1 {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 120px;\n  height: 25px;\n  border: 2px solid #7acaddcc;\n  border-radius: 5px;\n  background-color: #f5f5f5;\n}\n\n.countdown-value1 {\n  font-size: 15px;\n  font-weight: bold;\n}\n\n</style>\n"],"mappings":"AA+DA,OAAAA,MAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,SAAA;MAAA;MACAC,OAAA;MAAA;MACAC,QAAA;MAAA;MACAC,KAAA;MACAL,IAAA;IACA;EACA;EACAM,KAAA;IACAC,IAAA;IACAC,IAAA;EACA;EACAC,QAAA;IACA,KAAAC,IAAA;EACA;EACA;EACAC,OAAA;IACAC,SAAAC,EAAA;MACAC,MAAA,CAAAC,IAAA,uCAAAF,EAAA;IACA;IACAH,KAAAP,OAAA;MAAA;MACA,IAAAa,GAAA;MACA,aAAAT,IAAA;QACA;UACAS,GAAA;UACA;QACA;UACAA,GAAA;UACA;QACA;UACAA,GAAA;UACA;QACA;UACAA,GAAA;UACA;QACA;UACAA,GAAA;MACA;MACA,IAAAb,OAAA,OAAAA,OAAA,GAAAA,OAAA;MACA,KAAAc,QAAA,CAAAC,GAAA,CAAAF,GAAA;QACAG,MAAA;UACAhB,OAAA,OAAAA,OAAA;UACAC,QAAA,OAAAA,QAAA;UACAJ,IAAA,OAAAA,IAAA;UACAoB,IAAA,OAAAA;QACA;MACA,GAAAC,IAAA,CAAAC,GAAA;QACA,KAAApB,SAAA,GAAAoB,GAAA,CAAArB,IAAA,EAAAsB,IAAA;QACA,KAAAlB,KAAA,GAAAiB,GAAA,CAAArB,IAAA,EAAAI,KAAA;QACA,KAAAmB,cAAA;MACA;IACA;IACAC,MAAA;MACA,KAAAzB,IAAA;MACA,KAAAoB,IAAA;MACA,KAAAV,IAAA;IACA;IACAgB,oBAAAvB,OAAA;MACA,KAAAO,IAAA,CAAAP,OAAA;IACA;IACAqB,eAAA;MACA,KAAAG,eAAA;MACAC,WAAA,MAAAD,eAAA;IACA;IACAA,gBAAA;MACA,SAAAzB,SAAA,iBAAAA,SAAA,CAAA2B,MAAA;QACA;MACA;MACA,MAAAC,GAAA,OAAAC,IAAA;MACA,KAAA7B,SAAA,CAAA8B,OAAA,CAAAC,IAAA;QACA,MAAAC,cAAA,OAAAH,IAAA,CAAAE,IAAA,CAAAE,UAAA;QACA,IAAAD,cAAA,GAAAJ,GAAA;UACA,KAAAM,IAAA,CAAAH,IAAA;QACA;UACA,KAAAG,IAAA,CAAAH,IAAA;QACA;QAEA,MAAAI,YAAA,OAAAN,IAAA,CAAAE,IAAA,CAAAK,QAAA;QACA,IAAAD,YAAA,IAAAP,GAAA;UACA,MAAAS,kBAAA,QAAAC,sBAAA,CAAAV,GAAA,EAAAO,YAAA;UACA,KAAAD,IAAA,CAAAH,IAAA,wBAAAM,kBAAA,CAAAE,IAAA;UACA,KAAAL,IAAA,CAAAH,IAAA,yBAAAM,kBAAA,CAAAG,KAAA;UACA,KAAAN,IAAA,CAAAH,IAAA;QACA;UACA,KAAAG,IAAA,CAAAH,IAAA;UACA,KAAAG,IAAA,CAAAH,IAAA;UACA,KAAAG,IAAA,CAAAH,IAAA;QACA;QAEA,MAAAU,SAAA,OAAAZ,IAAA,CAAAE,IAAA,CAAAW,KAAA;QACA,IAAAD,SAAA,GAAAb,GAAA;UACA,MAAAe,aAAA,QAAAL,sBAAA,CAAAV,GAAA,EAAAa,SAAA;UACA,KAAAP,IAAA,CAAAH,IAAA,mBAAAY,aAAA,CAAAJ,IAAA;UACA,KAAAL,IAAA,CAAAH,IAAA,oBAAAY,aAAA,CAAAH,KAAA;UACA,KAAAN,IAAA,CAAAH,IAAA;QACA;UACA,KAAAG,IAAA,CAAAH,IAAA;UACA,KAAAG,IAAA,CAAAH,IAAA;UACA,KAAAG,IAAA,CAAAH,IAAA;QACA;QAEA,MAAAa,OAAA,OAAAf,IAAA,CAAAE,IAAA,CAAAc,GAAA;QACA,IAAAD,OAAA,IAAAhB,GAAA;UACA,KAAAM,IAAA,CAAAH,IAAA;QACA;UACA,KAAAG,IAAA,CAAAH,IAAA;QACA;MACA;IACA;IACAO,uBAAAG,SAAA,EAAAG,OAAA;MACA,MAAAE,IAAA,GAAAF,OAAA,GAAAH,SAAA;MACA,MAAAF,IAAA,GAAAQ,IAAA,CAAAC,KAAA,CAAAF,IAAA;MACA,MAAAN,KAAA,GAAAO,IAAA,CAAAC,KAAA,CAAAF,IAAA;MACA;QAAAP,IAAA;QAAAC;MAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}