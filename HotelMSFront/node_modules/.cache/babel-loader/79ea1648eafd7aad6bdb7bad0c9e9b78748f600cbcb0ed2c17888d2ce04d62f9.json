{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Identify from \"@/components/Identify\";\nexport default {\n  name: \"Register\",\n  components: {\n    Identify\n  },\n  data() {\n    // 验证码校验\n    const validatePassword = (rule, confirmPass, callback) => {\n      if (confirmPass === '') {\n        callback(new Error('请确认密码'));\n      } else if (confirmPass !== this.form.password) {\n        callback(new Error('两次输入的密码不一致'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      form: {\n        username: '',\n        password: '',\n        confirmPass: '',\n        role: 'USER'\n      },\n      code: '',\n      // 用户输入的验证码\n      identifyCode: '',\n      // 生成的验证码\n      identifyCodes: '123456789ABCDEFGHGKMNPQRSTUVWXY',\n      // 验证码规则\n      rules: {\n        username: [{\n          required: true,\n          message: '请输入账号',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }],\n        confirmPass: [{\n          validator: validatePassword,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  mounted() {\n    this.refreshCode();\n  },\n  methods: {\n    // 切换验证码\n    refreshCode() {\n      this.identifyCode = '';\n      this.makeCode(this.identifyCodes, 4);\n    },\n    // 生成随机验证码\n    makeCode(o, l) {\n      for (let i = 0; i < l; i++) {\n        this.identifyCode += this.identifyCodes[Math.floor(Math.random() * this.identifyCodes.length)];\n      }\n    },\n    register() {\n      if (!this.code) {\n        this.$message.warning('请输入验证码');\n        this.refreshCode();\n        return;\n      }\n      if (this.code.toLowerCase() !== this.identifyCode.toLowerCase()) {\n        this.$message.warning('验证码错误');\n        this.refreshCode();\n        return;\n      }\n      this.$refs['formRef'].validate(valid => {\n        if (valid) {\n          // 验证通过\n          this.$request.post('/register', this.form).then(res => {\n            if (res.code === '200') {\n              this.$router.push('/'); // 跳转登录页面\n              this.$message.success('注册成功');\n            } else {\n              this.refreshCode();\n              this.$message.error(res.msg);\n            }\n          });\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["Identify","name","components","data","validatePassword","rule","confirmPass","callback","Error","form","password","username","role","code","identifyCode","identifyCodes","rules","required","message","trigger","validator","mounted","refreshCode","methods","makeCode","o","l","i","Math","floor","random","length","register","$message","warning","toLowerCase","$refs","validate","valid","$request","post","then","res","$router","push","success","error","msg"],"sources":["src/views/Register.vue"],"sourcesContent":["<template>\n  <div>\n    <main>\n      <div class=\"box\">\n        <div class=\"inner-box\">\n          <div class=\"container\">\n            <div\n              style=\"width: 350px; padding: 20px 30px; background-color: white; border-radius: 5px;margin-left: 50px; \">\n              <div class=\"logo1\" style=\"margin-top: -20px;\">\n                <img src=\"@/assets/imgs/pic4.png\" alt=\"HotelMS\">\n                <h4 style=\"margin-top: 5px;\">HotelMS智能酒店平台</h4>\n              </div>\n\n              <div class=\"heading\" style=\"margin-top: 50px;margin-bottom: 20px;\">\n                <h2 style=\"width: 350px; font-size: 28px;margin-bottom: 40px;\">Register right now? </h2>\n              </div>\n              <el-form :model=\"form\" :rules=\"rules\" ref=\"formRef\">\n                <el-form-item prop=\"username\">\n                  <el-input size=\"medium\" prefix-icon=\"el-icon-user\" placeholder=\"请输入账号\"\n                    v-model=\"form.username\"></el-input>\n                </el-form-item>\n                <el-form-item prop=\"password\">\n                  <el-input size=\"medium\" prefix-icon=\"el-icon-lock\" placeholder=\"请输入密码\" show-password\n                    v-model=\"form.password\"></el-input>\n                </el-form-item>\n                <el-form-item prop=\"confirmPass\">\n                  <el-input size=\"medium\" prefix-icon=\"el-icon-lock\" placeholder=\"请确认密码\" show-password\n                    v-model=\"form.confirmPass\"></el-input>\n                </el-form-item>\n\n                <el-form-item prop=\"code\">\n                  <div style=\"display: flex\">\n                    <el-input style=\"flex: 1\" size=\"medium\" v-model=\"code\"></el-input>\n                    <Identify :identifyCode=\"identifyCode\" @click.native=\"refreshCode\" />\n                  </div>\n                </el-form-item>\n\n                <el-form-item>\n                  <el-button class=\"sign-btn\" style=\"width: 100%;\" @click=\"register\">注 册</el-button>\n                </el-form-item>\n                <div style=\"display: flex; align-items: center\">\n                  <div style=\"flex: 1\"></div>\n                  <div style=\"flex: 1; text-align: right\">\n                    已有账号？请 <a href=\"/login\">登录</a>\n                  </div>\n                </div>\n              </el-form>\n\n            </div>\n            <div class=\"pics\">\n              <div class=\"images-wrapper\">\n                <img src=\"@/assets/imgs/pic3.png\" style=\"width: 100%;height: 100%;\">\n              </div>\n\n              <div class=\"text-slider\">\n                <div class=\"text-wrap\">\n                  <div class=\"text-group\" style=\"margin-top: -50px;\">\n                    <h2>HotelMS智能酒店平台</h2>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </main>\n  </div>\n</template>\n\n<script>\nimport Identify from \"@/components/Identify\";\n\nexport default {\n  name: \"Register\",\n  components: {\n    Identify\n  },\n  data() {\n    // 验证码校验\n    const validatePassword = (rule, confirmPass, callback) => {\n      if (confirmPass === '') {\n        callback(new Error('请确认密码'))\n      } else if (confirmPass !== this.form.password) {\n        callback(new Error('两次输入的密码不一致'))\n      } else {\n        callback()\n      }\n    }\n    return {\n      form: {\n        username: '',\n        password: '',\n        confirmPass: '',\n        role:'USER',\n      },\n      code: '', // 用户输入的验证码\n      identifyCode: '', // 生成的验证码\n      identifyCodes: '123456789ABCDEFGHGKMNPQRSTUVWXY', // 验证码规则\n      rules: {\n        username: [\n          { required: true, message: '请输入账号', trigger: 'blur' },\n        ],\n        password: [\n          { required: true, message: '请输入密码', trigger: 'blur' },\n        ],\n        confirmPass: [\n          { validator: validatePassword, trigger: 'blur' }\n        ],\n      }\n    }\n  }, \n  mounted() {\n    this.refreshCode()\n  },\n  methods: {\n    // 切换验证码\n    refreshCode() {\n      this.identifyCode = ''\n      this.makeCode(this.identifyCodes, 4)\n    },\n    // 生成随机验证码\n    makeCode(o, l) {\n      for (let i = 0; i < l; i++) {\n        this.identifyCode += this.identifyCodes[Math.floor(Math.random() * this.identifyCodes.length)]\n      }\n    },\n    register() {\n      if (!this.code) {\n        this.$message.warning('请输入验证码')\n        this.refreshCode()\n        return\n      }\n      if (this.code.toLowerCase() !== this.identifyCode.toLowerCase()) {\n        this.$message.warning('验证码错误')\n        this.refreshCode()\n        return\n      }\n      this.$refs['formRef'].validate((valid) => {\n        if (valid) {\n          // 验证通过\n          this.$request.post('/register', this.form).then(res => {\n            if (res.code === '200') {\n              this.$router.push('/')  // 跳转登录页面\n              this.$message.success('注册成功')\n            } else {\n              this.refreshCode()\n              this.$message.error(res.msg)\n            }\n          })\n        }\n      })\n    },\n  }\n}\n</script>\n\n\n<style scoped>\n.container {\n  height: 60vh;\n  overflow: hidden;\n  background-size: 100%;\n  display: flex;\n  align-items: center;\n  color: #666;\n}\n\na {\n  color: #2a60c9;\n}\n\nmain {\n  width: 100%;\n  min-height: 100vh;\n  overflow: hidden;\n  background-color: #8bd2de;\n  padding: 2rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.box {\n  position: relative;\n  width: 100%;\n  max-width: 1030px;\n  height: 620px;\n  background-color: #fff;\n  border-radius: 3.3rem;\n  box-shadow: 0 60px 40px -30px rgba(0, 0, 0, 0.27);\n}\n\n.inner-box {\n  position: absolute;\n  width: calc(100% - 3.8rem);\n  height: calc(100% - 3.8rem);\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n\n.pics {\n  position: absolute;\n  margin-top: 1%;\n  height: 95%;\n  width: 55%;\n  top: 0;\n  left: 45%;\n  background-color: #ece8e5;\n  border-radius: 2rem;\n  display: grid;\n  grid-template-rows: auto 1fr;\n  transition: 0.8s ease-in-out;\n}\n\n.images-wrapper {\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: 1fr;\n}\n\n.text-group {\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  color: #0c0c0c;\n}\n\n.logo1 {\n  display: flex;\n  align-items: center;\n}\n\n.logo1 img {\n  width: 40px;\n  margin-right: 0.3rem;\n}\n\n.logo1 h4 {\n  font-size: 1.1rem;\n  margin-top: 14px;\n  letter-spacing: -0.5px;\n  color: #151111;\n}\n\n.heading h2 {\n  width: 100%;\n  margin-top: -40px;\n  font-size: 2.1rem;\n  font-weight: 600;\n  color: #151111;\n}\n\n.sign-btn {\n  display: inline-block;\n  width: 100%;\n  height: 43px;\n  background-color: #f6a09a;\n  color: #fff;\n  border: none;\n  cursor: pointer;\n  border-radius: 0.8rem;\n  font-size: 0.95rem;\n  margin-bottom: 2rem;\n  transition: 0.3s;\n}\n\n.sign-btn:hover {\n  background-color: #b5acf0;\n}\n</style>"],"mappings":";AAsEA,OAAAA,QAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAF;EACA;EACAG,KAAA;IACA;IACA,MAAAC,gBAAA,GAAAA,CAAAC,IAAA,EAAAC,WAAA,EAAAC,QAAA;MACA,IAAAD,WAAA;QACAC,QAAA,KAAAC,KAAA;MACA,WAAAF,WAAA,UAAAG,IAAA,CAAAC,QAAA;QACAH,QAAA,KAAAC,KAAA;MACA;QACAD,QAAA;MACA;IACA;IACA;MACAE,IAAA;QACAE,QAAA;QACAD,QAAA;QACAJ,WAAA;QACAM,IAAA;MACA;MACAC,IAAA;MAAA;MACAC,YAAA;MAAA;MACAC,aAAA;MAAA;MACAC,KAAA;QACAL,QAAA,GACA;UAAAM,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAT,QAAA,GACA;UAAAO,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAb,WAAA,GACA;UAAAc,SAAA,EAAAhB,gBAAA;UAAAe,OAAA;QAAA;MAEA;IACA;EACA;EACAE,QAAA;IACA,KAAAC,WAAA;EACA;EACAC,OAAA;IACA;IACAD,YAAA;MACA,KAAAR,YAAA;MACA,KAAAU,QAAA,MAAAT,aAAA;IACA;IACA;IACAS,SAAAC,CAAA,EAAAC,CAAA;MACA,SAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,EAAAC,CAAA;QACA,KAAAb,YAAA,SAAAC,aAAA,CAAAa,IAAA,CAAAC,KAAA,CAAAD,IAAA,CAAAE,MAAA,UAAAf,aAAA,CAAAgB,MAAA;MACA;IACA;IACAC,SAAA;MACA,UAAAnB,IAAA;QACA,KAAAoB,QAAA,CAAAC,OAAA;QACA,KAAAZ,WAAA;QACA;MACA;MACA,SAAAT,IAAA,CAAAsB,WAAA,YAAArB,YAAA,CAAAqB,WAAA;QACA,KAAAF,QAAA,CAAAC,OAAA;QACA,KAAAZ,WAAA;QACA;MACA;MACA,KAAAc,KAAA,YAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA;UACA,KAAAC,QAAA,CAAAC,IAAA,mBAAA/B,IAAA,EAAAgC,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAA7B,IAAA;cACA,KAAA8B,OAAA,CAAAC,IAAA;cACA,KAAAX,QAAA,CAAAY,OAAA;YACA;cACA,KAAAvB,WAAA;cACA,KAAAW,QAAA,CAAAa,KAAA,CAAAJ,GAAA,CAAAK,GAAA;YACA;UACA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}